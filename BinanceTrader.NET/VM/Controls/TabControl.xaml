<!--******************************************************************************************************
//  Copyright © 2022, S. Christison. No Rights Reserved.
//
//  Licensed to [You] under one or more License Agreements.
//
//      http://www.opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
//******************************************************************************************************-->

<UserControl
    x:Class="BTNET.VM.Controls.TabControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:BTNET.BV.Converters"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:z="http://schemas.microsoft.com/xaml/behaviors"
    Name="TabC">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <converters:NumericFieldConverter x:Key="converter" />
    </UserControl.Resources>

    <TabControl
            FontSize="12"
            Height="54"
            MinWidth="140"
            MinHeight="54"
            Margin="320,0,0,22"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            SelectedIndex="{Binding MainVM.SelectedTabUI, Mode=TwoWay}"
            UseLayoutRounding="True">
        <TabControl.Resources>
            <LinearGradientBrush x:Key="MenuBrush" StartPoint="0,0" EndPoint="0,1" Opacity="0.4">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.1" Color="{DynamicResource ControlDarkColor}" />
                        <GradientStop Offset="0.3" Color="{DynamicResource ControlMediumColor}" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="MenuPopupBrush" StartPoint="0.5,0" EndPoint="0.5,1" Opacity="0.4">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Offset="0.1" Color="{DynamicResource ControlMediumColor}" />
                        <GradientStop Offset="0.3" Color="{DynamicResource ControlDarkColor}" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="MenuPopupBrush2" StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0.09" Color="#0A4247" />
                <GradientStop Offset="0.3" Color="#2C848C" />
                <GradientStop Offset="1" Color="#0A4247" />
            </LinearGradientBrush>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border
                                    x:Name="Border"
                                    Margin="2,0"
                                    Background="Transparent"
                                    BorderBrush="Gainsboro"
                                    BorderThickness="1,1,1,0"
                                    CornerRadius="4,4,0,0">
                                <ContentPresenter
                                        x:Name="ContentSite"
                                        Margin="10,2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        ContentSource="Header" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuPopupBrush}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="Border" Property="IsMouseOver" Value="True" />
                                        <Condition Property="IsSelected" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border" Property="Background" Value="{DynamicResource MenuPopupBrush2}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </TabControl.Resources>

        <TabControl.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" Opacity="0.40">
                <LinearGradientBrush.GradientStops>
                    <GradientStopCollection>
                        <!--<GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="0.01" />-->
                        <GradientStop Offset="0.2" Color="{DynamicResource ControlDarkColor}" />
                        <GradientStop Offset="1" Color="{DynamicResource ControlMediumColor}" />
                    </GradientStopCollection>
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </TabControl.Background>

        <TabItem Foreground="White" Header="BUY">
            <StackPanel>
                <Grid>

                    <StackPanel Orientation="Horizontal">

                        <!--  ReadOnly for Limit Orders  -->
                        <TextBlock
                                Margin="3,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding BorrowVM.BorrowLabelQuote}"
                                TextAlignment="Center" />

                        <xctk:DecimalUpDown
                                Width="100"
                                Margin="8,2,5,0"
                                DefaultValue="0"
                                Increment="{Binding IncrementLotSizeMin}"
                                Minimum="{Binding IncrementLotSizeMin}"
                                ShowButtonSpinner="False"
                                IsEnabled="{Binding TradeVM.EnableQuotePriceBuy}"
                                Value="{Binding QuoteVM.TradeAmountBuy}"
                                Opacity="0.80">

                            <z:Interaction.Triggers>
                                <z:EventTrigger EventName="LostFocus">
                                    <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelBuyQuoteLostFocusCommand}" />
                                </z:EventTrigger>
                                <z:EventTrigger EventName="GotFocus">
                                    <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelBuyQuoteGotFocusCommand}" />
                                </z:EventTrigger>
                            </z:Interaction.Triggers>
                        </xctk:DecimalUpDown>
                        <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding BorrowVM.BorrowLabelBase}"
                                TextAlignment="Center" />
                        <xctk:DecimalUpDown
                                Width="100"
                                Margin="8,2,5,0"
                                DefaultValue="0"
                                Increment="{Binding IncrementLotSizeMin}"
                                Minimum="{Binding IncrementLotSizeMin}"
                                ShowButtonSpinner="False"
                                Value="{Binding QuoteVM.ObserveQuoteOrderQuantityLocalBuy}"
                                Opacity="0.80">
                            <z:Interaction.Triggers>
                                <z:EventTrigger EventName="LostFocus">
                                    <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelBuyBaseLostFocusCommand}" />
                                </z:EventTrigger>
                                <z:EventTrigger EventName="GotFocus">
                                    <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelBuyBaseGotFocusCommand}" />
                                </z:EventTrigger>
                            </z:Interaction.Triggers>
                        </xctk:DecimalUpDown>
                        <!--  Drop Down Box [ Market   | Limit    ]  -->
                        <!--  Price         [ ReadOnly | Writable ]  -->
                        <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding BorrowVM.SymbolName}"
                                TextAlignment="Center" />
                        <xctk:DecimalUpDown
                                Width="100"
                                Margin="8,2,5,0"
                                DefaultValue="0"
                                Increment="{Binding MinTickSize}"
                                IsEnabled="{Binding TradeVM.UseLimitBuyBool, Mode=OneWay}"
                                Minimum="{Binding MinTickSize}"
                                ShowButtonSpinner="False"
                                Value="{Binding TradeVM.SymbolPrice}"
                                Opacity="0.80" />

                        <Button
                                Margin="0,1,0,0"
                                Width="60"
                                Height="20"
                                Command="{Binding MainVM.BuyCommand}"
                                Content="BUY" FontSize="12" />

                        <CheckBox
                                Margin="5"
                                VerticalAlignment="Center"
                                Command="{Binding BorrowVM.BorrowBuyCommand}"
                                Content="Borrow"
                                Foreground="White"
                                IsChecked="{Binding BorrowVM.BorrowBuy, Mode=OneWay}"
                                ToolTip="Tick to Borrow funds where available"
                                Opacity="0.85" />
                        <CheckBox
                                Margin="5"
                                VerticalAlignment="Center"
                                Command="{Binding TradeVM.UseBaseCommandBuy}"
                                Content="Base"
                                Foreground="White"
                                IsChecked="{Binding TradeVM.UseBaseForQuoteBoolBuy, Mode=OneWay}"
                                ToolTip="Use Base Asset for Quote &#x0a;(Buy an Exact Quantity)"
                                Opacity="0.85" />
                        <CheckBox
                                Margin="5"
                                VerticalAlignment="Center"
                                Command="{Binding TradeVM.UseLimitBuyCommand}"
                                Content="Limit"
                                Foreground="White"
                                IsChecked="{Binding TradeVM.UseLimitBuyBool, Mode=OneWay}"
                                ToolTip="Tick to place Limit Buy Orders instead of Market Orders &#x0a;(Use Price you Choose and Exact Quantity)"
                                Opacity="0.85" />
                    </StackPanel>
                </Grid>
            </StackPanel>
        </TabItem>
        <TabItem Foreground="White" Header="SELL">
            <StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock
                            Margin="3,0,0,0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{Binding BorrowVM.BorrowLabelQuote}"
                            TextAlignment="Center" />
                    <xctk:DecimalUpDown
                            Width="100"
                            Margin="8,2,5,0"
                            DefaultValue="0"
                            Increment="{Binding IncrementLotSizeMin}"
                            Minimum="{Binding IncrementLotSizeMin}"
                            ShowButtonSpinner="False"
                            IsEnabled="{Binding TradeVM.EnableQuotePriceSell}"
                            Value="{Binding QuoteVM.TradeAmountSell}"
                            Opacity="0.80">
                        <z:Interaction.Triggers>
                            <z:EventTrigger EventName="LostFocus">
                                <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelSellQuoteLostFocusCommand}" />
                            </z:EventTrigger>
                            <z:EventTrigger EventName="GotFocus">
                                <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelSellQuoteGotFocusCommand}" />
                            </z:EventTrigger>
                        </z:Interaction.Triggers>
                    </xctk:DecimalUpDown>
                    <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="White"
                            Text="{Binding BorrowVM.BorrowLabelBase}"
                            TextAlignment="Center" />
                    <xctk:DecimalUpDown
                            Width="100"
                            Margin="8,2,5,0"
                            DefaultValue="0"
                            Increment="{Binding IncrementLotSizeMin}"
                            Minimum="{Binding IncrementLotSizeMin}"
                            ShowButtonSpinner="False"
                            Value="{Binding QuoteVM.ObserveQuoteOrderQuantityLocalSell}"
                            Opacity="0.80">
                        <z:Interaction.Triggers>
                            <z:EventTrigger EventName="LostFocus">
                                <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelSellBaseLostFocusCommand}" />
                            </z:EventTrigger>
                            <z:EventTrigger EventName="GotFocus">
                                <z:InvokeCommandAction Command="{Binding TradeVM.TradePanelSellBaseGotFocusCommand}" />
                            </z:EventTrigger>
                        </z:Interaction.Triggers>
                    </xctk:DecimalUpDown>
                    <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding BorrowVM.SymbolName}"
                                TextAlignment="Center" />
                    <xctk:DecimalUpDown
                                Width="100"
                                Margin="8,2,5,0"
                                DefaultValue="0"
                                Increment="{Binding MinTickSize}"
                                IsEnabled="{Binding TradeVM.UseLimitSellBool}"
                                Minimum="{Binding MinTickSize}"
                                ShowButtonSpinner="False"
                                Value="{Binding TradeVM.SymbolPrice}"
                                Opacity="0.80" />
                    <Button
                            Width="60"
                            Height="20"
                            Margin="0,1,0,0"
                            Command="{Binding MainVM.SellCommand}"
                            Content="SELL"  FontSize="12" />
                    <CheckBox
                            Margin="5"
                            VerticalAlignment="Center"
                            Command="{Binding BorrowVM.BorrowSellCommand}"
                            Content="Borrow"
                            Foreground="White"
                            IsChecked="{Binding BorrowVM.BorrowSell, Mode=OneWay}"
                            ToolTip="Tick to Borrow funds where available"
                            Opacity="0.85" />
                    <CheckBox
                            Margin="5"
                            VerticalAlignment="Center"
                            Command="{Binding TradeVM.UseBaseCommandSell}"
                            Content="Base"
                            Foreground="White"
                            IsChecked="{Binding TradeVM.UseBaseForQuoteBoolSell, Mode=OneWay}"
                            ToolTip="Use Base Asset for Quote &#x0a;(Sell an Exact Quantity)"
                            Opacity="0.85" />
                    <CheckBox
                            Margin="5"
                            VerticalAlignment="Center"
                            Command="{Binding TradeVM.UseLimitSellCommand}"
                            Content="Limit"
                            Foreground="White"
                            IsChecked="{Binding TradeVM.UseLimitSellBool, Mode=OneWay}"
                            ToolTip="Tick to place Limit Sell Orders instead of Market Orders &#x0a;(Use Price you Choose and Exact Quantity)"
                            Opacity="0.85" />
                </StackPanel>
            </StackPanel>
        </TabItem>
        <TabItem
                Foreground="White"
                Header="SETTLE"
                IsSelected="True" Visibility="{Binding VisibilityVM.HideSettleTab, Converter={StaticResource BoolToVis}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="19*" />
                    <ColumnDefinition Width="73*" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button
                                Margin="2"
                                Padding="2"
                                Command="{Binding SettleVM.SettleQuoteCommand}"
                                Content="{Binding BorrowVM.BorrowLabelQuote}"
                                FontSize="12"
                                IsEnabled="{Binding SettleVM.CanRepayQuote}"
                                ToolTip="Settle the Max Free amount of the Quote Asset"
                                Opacity="0.85" />
                    <Button
                                Margin="2"
                                Padding="2"
                                Command="{Binding SettleVM.SettleBaseCommand}"
                                Content="{Binding BorrowVM.BorrowLabelBase}"
                                FontSize="12"
                                IsEnabled="{Binding SettleVM.CanRepayBase}"
                                ToolTip="Settle the Max Free amount of the Base Asset"
                                Opacity="0.85" />
                    <Button
                                Margin="2"
                                Padding="2"
                                Command="{Binding SettleVM.SettleAllCommand}"
                                Content="{Binding CurrentlySelectedSymbol.SymbolView.Symbol}"
                                FontSize="12"
                                IsEnabled="{Binding SettleVM.CanRepayAll}"
                                ToolTip="Settle the Max Free amount of Both Symbol Assets (Base and Quote)"
                                Opacity="0.85" />
                </StackPanel>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>