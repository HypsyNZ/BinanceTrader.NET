<!--******************************************************************************************************
//  Copyright © 2022, S. Christison. No Rights Reserved.
//
//  Licensed to [You] under one or more License Agreements.
//
//      http://www.opensource.org/licenses/MIT
//
//  Unless agreed to in writing, the subject software distributed under the License is distributed on an
//  "AS-IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//
//******************************************************************************************************-->

<Window
    x:Class="BTNET.Views.AlertsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:BTNET.Controls"
    xmlns:converters="clr-namespace:BTNET.Converters"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    Title="Alerts"
    Width="545"
    Height="352"
    Background="Black"
    Icon="/BV/Resources/bellicon.png"
    ResizeMode="NoResize"
    WindowStyle="SingleBorderWindow">

    <Window.Resources>

        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVis" />
            <converters:WidthConverter x:Key="WidthConvert" />
            <BitmapImage x:Key="Exit" UriSource="/BV/Resources/exit.jpg" />
        </ResourceDictionary>
    </Window.Resources>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="0"
            GlassFrameThickness="0"
            ResizeBorderThickness="0"
            UseAeroCaptionButtons="False" />
    </WindowChrome.WindowChrome>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="8" />
            <RowDefinition Height="18" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Rectangle
            Grid.Row="0"
            Grid.ColumnSpan="2"
            Height="8"
            VerticalAlignment="Top"
            Fill="{DynamicResource MenuPopupBrush3}"
            MouseLeftButtonDown="DragWindowOrMaximize" />

        <StackPanel
            Grid.Row="1"
            Grid.ColumnSpan="2"
            Background="#242325">
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                <Button
                    Width="16"
                    Height="16"
                    Margin="0,1,2,0"
                    HorizontalAlignment="Right"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding MainVM.CloseAlertsCommand}"
                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    ToolTip="Exit Panel">
                    <Image Source="{StaticResource Exit}" />
                </Button>
            </StackPanel>
        </StackPanel>

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <StackPanel
                Margin="4,4,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Orientation="Vertical">
                <TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Alert Symbol" />
                <TextBox Width="80" Text="{Binding AlertVM.AlertSymbol}" />
                <TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Alert Price" />
                <xctk:DecimalUpDown
                                Width="80"
                                Increment="{Binding MinTickSize}"
                                Minimum="{Binding MinTickSize}"
                                DefaultValue="{Binding MinTickSize}"
                                ShowButtonSpinner="False"
                                Text="{Binding AlertVM.AlertPrice}"
                                Value="{Binding AlertVM.AlertPrice}" />

                <CheckBox
                    x:Name="cbPlaySound"
                    Margin="2,4,0,0"
                    Command="{Binding AlertVM.PlaySoundCommand}"
                    Content="Play Sound"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.PlaySoundBool, Mode=OneWay}" />
                <CheckBox
                    x:Name="cbRepeatAlert"
                    Margin="2,4,0,0"
                    Command="{Binding AlertVM.RepeatAlertCommand}"
                    Content="Repeat Alert"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.RepeatAlertBool, Mode=OneWay}"
                    ToolTip="Whether the alert should repeat" />
                <CheckBox
                    x:Name="cbReverse"
                    Margin="2,4,0,0"
                    Command="{Binding AlertVM.ReverseBeforeAlertCommand}"
                    Content="Reverse First"
                    Foreground="White"
                    IsChecked="{Binding AlertVM.ReverseFirstBool, Mode=OneWay}"
                    ToolTip="Whether the price has to reverse before the alert can trigger again" />

                <TextBlock
                    Margin="4,0,4,0"
                    HorizontalAlignment="Center"
                    Foreground="White"
                    Text="Repeat Interval"
                    Visibility="{Binding AlertVM.RepeatAlertBool, Converter={StaticResource BoolToVis}}" />
                <xctk:DecimalUpDown
                                Width="80"
                                Increment="1"
                                Minimum="1"
                                DefaultValue="1"
                                ShowButtonSpinner="False"
                                Text="{Binding AlertVM.AlertInterval}"
                                Value="{Binding AlertVM.AlertInterval}" Visibility="{Binding AlertVM.RepeatAlertBool, Converter={StaticResource BoolToVis}}" />
                <StackPanel
                    Margin="3"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    Orientation="Vertical">
                    <TextBlock
                        Margin="4,0,4,0"
                        HorizontalAlignment="Center"
                        Foreground="White"
                        Text="Intent" />
                    <ComboBox
                        x:Name="cbIntent"
                        Width="85"
                        SelectedItem="{Binding AlertVM.AlertIntent}" />
                    <TextBlock
                        Margin="4,0,4,0"
                        HorizontalAlignment="Center"
                        Foreground="White"
                        Text="Direction" />
                    <ComboBox
                        x:Name="cbDirection"
                        Width="85"
                        SelectedItem="{Binding AlertVM.AlertDirection}" />
                </StackPanel>
            </StackPanel>
            <StackPanel Grid.Row="2" Orientation="Vertical" />
            <Button
                Margin="7"
                Command="{Binding AlertVM.AddAlertCommand}"
                Content="Add Alert" />
            <Button
                Margin="7,0,7,0"
                Command="{Binding AlertVM.RemoveAlertCommand}"
                Content="Remove Alert"
                ToolTip="Removes the Selected Alert" />
        </StackPanel>

        <controls:SortableListView
            Grid.Row="2"
            Grid.Column="1"
            Background="DarkGray"
            ItemsSource="{Binding AlertVM.Alerts, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Hidden"
            SelectedItem="{Binding AlertVM.SelectedAlert}">
            <controls:SortableListView.View>
                <GridView>
                    <GridViewColumn
                        Width="80"
                        DisplayMemberBinding="{Binding AlertSymbol}"
                        Header="Symbol" />
                    <GridViewColumn
                        Width="68"
                        DisplayMemberBinding="{Binding AlertPrice}"
                        Header="Price" />
                    <GridViewColumn
                        Width="40"
                        DisplayMemberBinding="{Binding AlertHasSound}"
                        Header="S" />
                    <GridViewColumn
                        Width="55"
                        DisplayMemberBinding="{Binding AlertIntent}"
                        Header="Intent" />
                    <GridViewColumn
                        Width="55"
                        DisplayMemberBinding="{Binding AlertDirection}"
                        Header="Direction" />
                    <!--<GridViewColumn Header="A" Width="40" DisplayMemberBinding="{Binding AlertHasAction}" />-->
                    <GridViewColumn
                        Width="40"
                        DisplayMemberBinding="{Binding ReverseBeforeRepeat}"
                        Header="RF" />
                    <GridViewColumn
                        Width="40"
                        DisplayMemberBinding="{Binding AlertRepeats}"
                        Header="R" />
                    <GridViewColumn
                        Width="65"
                        DisplayMemberBinding="{Binding RepeatInterval}"
                        Header="Interval" />
                </GridView>
            </controls:SortableListView.View>
        </controls:SortableListView>
    </Grid>
</Window>